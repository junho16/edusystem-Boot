<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edusystem.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.edusystem.entity.Course">
    <id column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="kcxz_id" jdbcType="VARCHAR" property="kcxzId" />
    <result column="kcxz_name" jdbcType="VARCHAR" property="kcxzName" />
    <result column="course_credit" jdbcType="INTEGER" property="courseCredit" />
    <result column="course_theoryHours" jdbcType="INTEGER" property="courseTheoryhours" />
    <result column="course_experimentHours" jdbcType="INTEGER" property="courseExperimenthours" />
    <result column="course_designWeeks" jdbcType="INTEGER" property="courseDesignweeks" />
    <result column="course_description" jdbcType="VARCHAR" property="courseDescription" />
    <result column="course_checkKind" jdbcType="VARCHAR" property="courseCheckkind" />
    <result column="college_id" jdbcType="VARCHAR" property="collegeId" />
    <result column="college_name" jdbcType="VARCHAR" property="collegeName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, kcxz_id, kcxz_name, course_credit, course_theoryHours, course_experimentHours, 
    course_designWeeks, course_description, course_checkKind, college_id, college_name
  </sql>
  <select id="selectByExample" parameterType="com.edusystem.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.edusystem.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edusystem.entity.Course">
    insert into course (course_id, course_name, kcxz_id, 
      kcxz_name, course_credit, course_theoryHours, 
      course_experimentHours, course_designWeeks, 
      course_description, course_checkKind, college_id, 
      college_name)
    values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{kcxzId,jdbcType=VARCHAR}, 
      #{kcxzName,jdbcType=VARCHAR}, #{courseCredit,jdbcType=INTEGER}, #{courseTheoryhours,jdbcType=INTEGER}, 
      #{courseExperimenthours,jdbcType=INTEGER}, #{courseDesignweeks,jdbcType=INTEGER}, 
      #{courseDescription,jdbcType=VARCHAR}, #{courseCheckkind,jdbcType=VARCHAR}, #{collegeId,jdbcType=VARCHAR}, 
      #{collegeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edusystem.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="kcxzId != null">
        kcxz_id,
      </if>
      <if test="kcxzName != null">
        kcxz_name,
      </if>
      <if test="courseCredit != null">
        course_credit,
      </if>
      <if test="courseTheoryhours != null">
        course_theoryHours,
      </if>
      <if test="courseExperimenthours != null">
        course_experimentHours,
      </if>
      <if test="courseDesignweeks != null">
        course_designWeeks,
      </if>
      <if test="courseDescription != null">
        course_description,
      </if>
      <if test="courseCheckkind != null">
        course_checkKind,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="collegeName != null">
        college_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="kcxzId != null">
        #{kcxzId,jdbcType=VARCHAR},
      </if>
      <if test="kcxzName != null">
        #{kcxzName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null">
        #{courseCredit,jdbcType=INTEGER},
      </if>
      <if test="courseTheoryhours != null">
        #{courseTheoryhours,jdbcType=INTEGER},
      </if>
      <if test="courseExperimenthours != null">
        #{courseExperimenthours,jdbcType=INTEGER},
      </if>
      <if test="courseDesignweeks != null">
        #{courseDesignweeks,jdbcType=INTEGER},
      </if>
      <if test="courseDescription != null">
        #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseCheckkind != null">
        #{courseCheckkind,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="collegeName != null">
        #{collegeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edusystem.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.kcxzId != null">
        kcxz_id = #{record.kcxzId,jdbcType=VARCHAR},
      </if>
      <if test="record.kcxzName != null">
        kcxz_name = #{record.kcxzName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCredit != null">
        course_credit = #{record.courseCredit,jdbcType=INTEGER},
      </if>
      <if test="record.courseTheoryhours != null">
        course_theoryHours = #{record.courseTheoryhours,jdbcType=INTEGER},
      </if>
      <if test="record.courseExperimenthours != null">
        course_experimentHours = #{record.courseExperimenthours,jdbcType=INTEGER},
      </if>
      <if test="record.courseDesignweeks != null">
        course_designWeeks = #{record.courseDesignweeks,jdbcType=INTEGER},
      </if>
      <if test="record.courseDescription != null">
        course_description = #{record.courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.courseCheckkind != null">
        course_checkKind = #{record.courseCheckkind,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeName != null">
        college_name = #{record.collegeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      kcxz_id = #{record.kcxzId,jdbcType=VARCHAR},
      kcxz_name = #{record.kcxzName,jdbcType=VARCHAR},
      course_credit = #{record.courseCredit,jdbcType=INTEGER},
      course_theoryHours = #{record.courseTheoryhours,jdbcType=INTEGER},
      course_experimentHours = #{record.courseExperimenthours,jdbcType=INTEGER},
      course_designWeeks = #{record.courseDesignweeks,jdbcType=INTEGER},
      course_description = #{record.courseDescription,jdbcType=VARCHAR},
      course_checkKind = #{record.courseCheckkind,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=VARCHAR},
      college_name = #{record.collegeName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edusystem.entity.Course">
    update course
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="kcxzId != null">
        kcxz_id = #{kcxzId,jdbcType=VARCHAR},
      </if>
      <if test="kcxzName != null">
        kcxz_name = #{kcxzName,jdbcType=VARCHAR},
      </if>
      <if test="courseCredit != null">
        course_credit = #{courseCredit,jdbcType=INTEGER},
      </if>
      <if test="courseTheoryhours != null">
        course_theoryHours = #{courseTheoryhours,jdbcType=INTEGER},
      </if>
      <if test="courseExperimenthours != null">
        course_experimentHours = #{courseExperimenthours,jdbcType=INTEGER},
      </if>
      <if test="courseDesignweeks != null">
        course_designWeeks = #{courseDesignweeks,jdbcType=INTEGER},
      </if>
      <if test="courseDescription != null">
        course_description = #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseCheckkind != null">
        course_checkKind = #{courseCheckkind,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="collegeName != null">
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edusystem.entity.Course">
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      kcxz_id = #{kcxzId,jdbcType=VARCHAR},
      kcxz_name = #{kcxzName,jdbcType=VARCHAR},
      course_credit = #{courseCredit,jdbcType=INTEGER},
      course_theoryHours = #{courseTheoryhours,jdbcType=INTEGER},
      course_experimentHours = #{courseExperimenthours,jdbcType=INTEGER},
      course_designWeeks = #{courseDesignweeks,jdbcType=INTEGER},
      course_description = #{courseDescription,jdbcType=VARCHAR},
      course_checkKind = #{courseCheckkind,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=VARCHAR},
      college_name = #{collegeName,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
</mapper>